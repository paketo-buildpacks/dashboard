{"version":3,"sources":["serviceWorker.js","components/lib/private_route.js","components/header.js","components/login.js","models/repo.js","models/user.js","models/issue.js","lib/github_client.js","stores/issue_store.js","models/pull_request.js","stores/pull_request_store.js","models/release.js","stores/release_store.js","lib/cache.js","components/lib/external_link.js","components/repo_list/issue_count.js","components/repo_list/pull_request_count.js","components/repo_list/release_state.js","components/repo_list/repo_item.js","stores/repo_store.js","components/repo_list/index.js","components/issue_list/issue_item.js","components/issue_list/index.js","components/pull_request_list/pull_request_item.js","components/pull_request_list/index.js","components/index.js","index.js"],"names":["Boolean","window","location","hostname","match","PrivateRoute","root","process","path","this","props","render","authenticated","children","to","pathname","state","from","React","Component","Header","src","className","alt","Login","token","handleChange","bind","handleSubmit","event","input","currentTarget","setState","value","preventDefault","assignToken","history","replace","onSubmit","htmlFor","type","id","onChange","Repo","name","url","openIssuesCount","User","avatarURL","Issue","number","title","createdAt","DateTime","fromISO","commentCount","user","GitHubClient","storage","request","getItem","startsWith","fetch","method","headers","response","link","get","json","data","status","IssueStore","client","repo","issues","do","issue","pull_request","push","html_url","created_at","comments","avatar_url","PullRequest","PullRequestStore","pullRequests","pullRequest","Release","tag","commitsBehind","NullRelease","ReleaseStore","release","tagName","behindBy","Cache","key","_key","setItem","JSON","stringify","parse","ExternalLink","aria-label","href","target","rel","IssueCount","cacheKey","result","cache","i","length","load","previousProps","store","list","set","priority","count","size","PullRequestCount","pull_requests","ReleaseState","cachedRelease","releaseStore","latest","commitsClass","RepoItem","parts","split","org","issueStore","pullRequestStore","RepoStore","repos","full_name","open_issues_count","RepoList","loading","handleReload","interval","timer","setInterval","clearInterval","Promise","all","repoStore","results","sort","a","b","nameA","toUpperCase","nameB","items","map","onClick","IssueItem","createdAtRelative","toRelative","createdAtDate","toLocaleString","month","day","year","commentCountClass","IssueList","cachedRepos","cachedIssues","createdAtA","toMillis","createdAtB","reposByOrg","promises","orgRepos","promise","issuesByRepo","repoIssues","PullRequestItem","PullRequestList","cachedPullRequests","pullRequestsByRepo","repoPullRequests","pr","App","localStorage","gitHubClient","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.99cef814.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ntype Props = {|\n  children: Node,\n  authenticated: boolean,\n  path: string,\n|};\n\nexport default class PrivateRoute extends React.Component<Props> {\n  render(): Node {\n    let root = \"\";\n    if (process.env.PUBLIC_URL) {\n      root = process.env.PUBLIC_URL;\n    }\n\n    return (\n      <Route\n        path={this.props.path}\n        render={({ location }) =>\n          this.props.authenticated ? (this.props.children) : (\n            <Redirect to={ { pathname: `${root}/login`, state: { from: location } } } />\n          )\n        }\n      />\n    );\n  }\n}\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/header.css';\n\ntype Props = {||};\n\nclass Header extends React.Component<Props> {\n  render(): Node {\n    let root = '';\n    if (process.env.PUBLIC_URL) {\n      root = process.env.PUBLIC_URL;\n    }\n\n    return (\n      <header>\n        <h1>\n          <Link to={root}>\n            <img src={`${root}/logo512.png`} className=\"logo\" alt=\"logo\" />\n            Paketo Buildpacks\n          </Link>\n        </h1>\n        <div className=\"navigation\">\n          <h3>\n            <Link to={`${root}/issues`}>Issues</Link>\n          </h3>\n          <h3>\n            <Link to={`${root}/pull-requests`}>Pull Requests</Link>\n          </h3>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport '../styles/login.css';\n\ntype Props = {|\n  assignToken: string => void,\n  history: {\n    replace: { pathname: string } => void,\n  },\n  location: { state: { from: { pathname: string } } },\n|};\n\ntype State = {|\n  token: string,\n  from: { pathname: string },\n|};\n\nclass Login extends React.Component<Props, State> {\n  handleChange: SyntheticEvent<HTMLInputElement> => void;\n  handleSubmit: SyntheticEvent<HTMLFormElement> => void;\n\n  constructor(props: Props) {\n    super(props);\n\n    let root = '/';\n    if (process.env.PUBLIC_URL) {\n      root = process.env.PUBLIC_URL;\n    }\n\n    const { from } = this.props.location.state || { from: { pathname: root } };\n    this.state = { token: '', from: from };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event: SyntheticEvent<HTMLInputElement>): void {\n    const input = (event.currentTarget: HTMLInputElement);\n    this.setState({ token: input.value });\n  }\n\n  handleSubmit(event: SyntheticEvent<HTMLFormElement>): void {\n    event.preventDefault();\n\n    this.props.assignToken(this.state.token);\n    this.props.history.replace(this.state.from);\n  }\n\n  render(): Node {\n    return (\n      <form className=\"login\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"token\">GitHub Personal Access Token</label>\n        <input type=\"text\" id=\"token\" value={this.state.token} onChange={this.handleChange} />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","// @flow\n\ntype Props = {|\n  id: number,\n  name: string,\n  url: string,\n  openIssuesCount: number,\n|};\n\nclass Repo {\n  id: number;\n  name: string;\n  url: string;\n  openIssuesCount: number;\n\n  constructor(props: Props) {\n    this.id = props.id;\n    this.name = props.name;\n    this.url = props.url;\n    this.openIssuesCount = props.openIssuesCount;\n  }\n}\n\nexport default Repo;\n","// @flow\n\ntype Props = {|\n  avatarURL: string,\n|};\n\nexport default class User {\n  avatarURL: string;\n\n  constructor(props: Props) {\n    this.avatarURL = props.avatarURL;\n  }\n}\n","// @flow\n\nimport { DateTime } from 'luxon';\n\nimport User from './user';\n\ntype Props = {|\n  id: number,\n  number: number,\n  title: string,\n  url: string,\n  createdAt: string,\n  commentCount: number,\n  user: User,\n|};\n\nexport default class Issue {\n  id: number;\n  number: number;\n  title: string;\n  url: string;\n  createdAt: DateTime;\n  commentCount: number;\n  user: User;\n\n  constructor(props: Props) {\n    this.id = props.id;\n    this.number = props.number;\n    this.title = props.title;\n    this.url = props.url;\n    this.createdAt = DateTime.fromISO(props.createdAt);\n    this.commentCount = props.commentCount;\n    this.user = props.user;\n  }\n}\n","// @flow\n\nimport { StorageInterface } from '../lib/storage';\n\nexport type GitHubClientRequest = {\n  method: string,\n  path: string,\n};\n\nexport type GitHubClientResponse = {\n  status: number,\n  data: any,\n  headers: {\n    link: ?string,\n  },\n};\n\ntype Props = {|\n  storage: StorageInterface,\n|};\n\nexport default class GitHubClient {\n  storage: StorageInterface;\n  worker: {\n    do: (token: ?string, method: string, path: string) => Promise<GitHubClientResponse>\n  };\n\n  constructor(props: Props) {\n    this.storage = props.storage;\n  }\n\n  async do(request: GitHubClientRequest): Promise<GitHubClientResponse> {\n    const token = this.storage.getItem('token') || '';\n\n    let url = request.path\n    if (url.startsWith('/')) {\n      url = `https://api.github.com${url}`;\n    }\n\n    const response = await fetch(url, {\n      method: request.method,\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    })\n\n    const link = response.headers.get('Link');\n    const data = await response.json();\n\n    return {\n      status: response.status,\n      data: data,\n      headers: {\n        link: link,\n      },\n    };\n  }\n}\n\nexport interface GitHubClientInterface {\n  do(GitHubClientRequest): Promise<GitHubClientResponse>;\n};\n","// @flow\n\nimport Issue from '../models/issue';\nimport User from '../models/user';\n\nimport { GitHubClientInterface, type GitHubClientResponse } from '../lib/github_client';\n\ntype Props = {|\n  client: GitHubClientInterface,\n|};\n\nexport default class IssueStore {\n  client: GitHubClientInterface;\n\n  constructor(props: Props) {\n    this.client = props.client;\n  }\n\n  async list(repo: string): Promise<Issue[]> {\n    let path: string = `/repos/${repo}/issues`;\n    let issues: Issue[] = [];\n\n    while (path) {\n      const response: GitHubClientResponse = await this.client.do({\n        method: 'GET',\n        path: path,\n      });\n\n      for (const issue of response.data) {\n        if (!issue.pull_request) {\n          issues.push(new Issue({\n            id: issue.id,\n            number: issue.number,\n            title: issue.title,\n            url: issue.html_url,\n            createdAt: issue.created_at,\n            commentCount: issue.comments,\n            user: new User({\n              avatarURL: issue.user.avatar_url,\n            }),\n          }));\n        }\n      }\n\n      path = ((response.headers.link || \"\").match( /<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n    }\n\n    return issues;\n  }\n};\n\nexport interface IssueStoreInterface {\n  list(repo: string): Promise<Issue[]>;\n};\n","// @flow\n\nimport { DateTime } from 'luxon';\n\nimport User from './user';\n\ntype Props = {|\n  id: number,\n  number: number,\n  title: string,\n  createdAt: string,\n  url: string,\n  user: User,\n|};\n\nexport default class PullRequest {\n  id: number;\n  number: number;\n  title: string;\n  createdAt: DateTime;\n  url: string;\n  user: User;\n\n  constructor(props: Props) {\n    this.id = props.id;\n    this.number = props.number;\n    this.title = props.title;\n    this.createdAt = DateTime.fromISO(props.createdAt);\n    this.url = props.url;\n    this.user = props.user;\n  }\n}\n","// @flow\n\nimport PullRequest from '../models/pull_request';\nimport User from '../models/user';\n\nimport { GitHubClientInterface, type GitHubClientResponse } from '../lib/github_client';\n\ntype Props = {|\n  client: GitHubClientInterface,\n|};\n\nexport default class PullRequestStore {\n  client: GitHubClientInterface;\n\n  constructor(props: Props) {\n    this.client = props.client;\n  }\n\n  async list(repo: string): Promise<PullRequest[]> {\n    let path: string = `/repos/${repo}/pulls`;\n    let pullRequests: PullRequest[] = [];\n\n    while (path) {\n      const response: GitHubClientResponse = await this.client.do({\n        method: 'GET',\n        path: path,\n      });\n\n      for (const pullRequest of response.data) {\n        pullRequests.push(new PullRequest({\n          id: pullRequest.id,\n          number: pullRequest.number,\n          title: pullRequest.title,\n          createdAt: pullRequest.created_at,\n          url: pullRequest.html_url,\n          user: new User({\n            avatarURL: pullRequest.user.avatar_url,\n          }),\n        }));\n      }\n\n      path = ((response.headers.link || \"\").match( /<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n    }\n\n    return pullRequests;\n  }\n};\n\nexport interface PullRequestStoreInterface {\n  list(repo: string): Promise<PullRequest[]>;\n};\n","// @flow\n\ntype Props = {|\n  tag: string,\n  commitsBehind: number,\n|};\n\nexport default class Release {\n  tag: string;\n  commitsBehind: number;\n\n  constructor(props: Props) {\n    this.tag = props.tag;\n    this.commitsBehind = props.commitsBehind;\n  }\n}\n\nexport const NullRelease: Release = new Release({\n  tag: '—',\n  commitsBehind: 0,\n});\n","// @flow\n\nimport Release, { NullRelease } from '../models/release';\nimport { GitHubClientInterface, type GitHubClientResponse } from '../lib/github_client';\n\ntype Props = {|\n  client: GitHubClientInterface,\n|};\n\nexport default class ReleaseStore {\n  client: GitHubClientInterface;\n\n  constructor(props: Props) {\n    this.client = props.client;\n  }\n\n  async latest(repo: string): Promise<Release> {\n    let response: GitHubClientResponse = await this.client.do({\n      method: 'GET',\n      path: `/repos/${repo}/releases/latest`,\n    });\n\n    let release = NullRelease;\n    if (response.status === 200) {\n      const tagName = (response.data: { [string]: any })['tag_name'];\n\n      response = await this.client.do({\n        method: 'GET',\n        path: `/repos/${repo}/compare/main...${tagName}`,\n      });\n\n      const behindBy = (response.data: { [string]: any })['behind_by'];\n\n      release = new Release({\n        tag: tagName,\n        commitsBehind: behindBy,\n      });\n    }\n\n    return release;\n  }\n}\n\nexport interface ReleaseStoreInterface {\n  latest(repo: string): Promise<Release>;\n}\n","// @flow\n\nimport { StorageInterface } from './storage';\n\ntype Props = {|\n  storage: StorageInterface,\n|};\n\nexport default class Cache {\n  props: Props;\n\n  constructor(props: Props) {\n    this.props = props;\n  }\n\n  set(key: string, value: { [key: string]: any}): void {\n    key = this._key(key);\n\n    this.props.storage.setItem(key, JSON.stringify(value));\n  }\n\n  get(key: string): { [key: string]: any} {\n    key = this._key(key);\n\n    const value = this.props.storage.getItem(key);\n\n    if (!value) {\n      return {};\n    }\n\n    return JSON.parse(value);\n  }\n\n  _key(key: string): string {\n    key = key.replace(/^(\\/)/,\"\");\n    return `/cache/${key}`;\n  }\n}\n\nexport interface CacheInterface {\n  get(key: string): { [key: string]: any};\n  set(key: string, value: { [key: string]: any}): void;\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\ntype Props = {|\n  href: string,\n  children: Node,\n\n  className?: string,\n  'aria-label'?: string,\n|};\n\nexport default class ExternalLink extends React.Component<Props> {\n  render(): Node {\n    return (\n      <a\n        className={this.props.className}\n        aria-label={this.props['aria-label']}\n        href={this.props.href}\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        {this.props.children}\n      </a>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport Issue from '../../models/issue';\nimport Repo from '../../models/repo';\nimport { IssueStoreInterface } from '../../stores/issue_store';\nimport { CacheInterface } from '../../lib/cache';\nimport { IssueOpenedIcon } from '@primer/octicons-react';\n\nimport ExternalLink from '../lib/external_link';\n\nimport '../../styles/repo_list/issue_count.css';\n\ntype Props = {|\n  repo: Repo,\n  cache: CacheInterface,\n  store: IssueStoreInterface,\n|};\n\ntype State = {|\n  issues: Issue[],\n|};\n\nexport default class IssueCount extends React.Component<Props, State> {\n  cacheKey: string;\n\n  constructor(props: Props) {\n    super(props);\n    this.cacheKey = `/repos/${props.repo.name}/issues`;\n\n    let issues: Issue[] = [];\n    const result = this.props.cache.get(this.cacheKey);\n\n    if (result['issues']) {\n      for (let i = 0; i < result['issues'].length; i++) {\n        issues.push(new Issue(result['issues'][i]));\n      }\n    }\n\n    this.state = {\n      issues: issues,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate(previousProps: Props) {\n    if (this.props.repo.openIssuesCount !== previousProps.repo.openIssuesCount) {\n      this.load();\n    }\n  }\n\n  async load() {\n    const issues = await this.props.store.list(this.props.repo.name)\n\n    this.props.cache.set(this.cacheKey, { issues: issues });\n    this.setState({ issues: issues });\n  }\n\n  render(): Node {\n    let priority: string = 'none';\n    const count = this.state.issues.length;\n\n    if (count > 0) {\n      priority = 'low';\n    }\n\n    if (count > 3) {\n      priority = 'medium';\n    }\n\n    if (count > 6) {\n      priority = 'high';\n    }\n\n    return (\n      <ExternalLink\n        className={`issue-count ${priority}`}\n        href={`${this.props.repo.url}/issues`}\n        aria-label='issue-count'\n      >\n        <IssueOpenedIcon size={16} />\n        <div className='count'>{count}</div>\n      </ExternalLink>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport PullRequest from '../../models/pull_request';\nimport Repo from '../../models/repo';\nimport { PullRequestStoreInterface } from '../../stores/pull_request_store';\nimport { CacheInterface } from '../../lib/cache';\n\nimport ExternalLink from '../lib/external_link';\nimport { GitPullRequestIcon } from '@primer/octicons-react';\n\nimport '../../styles/repo_list/pull_request_count.css';\n\ntype Props = {|\n  repo: Repo,\n  cache: CacheInterface,\n  store: PullRequestStoreInterface,\n|};\n\ntype State = {|\n  pullRequests: PullRequest[],\n|};\n\nexport default class PullRequestCount extends React.Component<Props, State> {\n  cacheKey: string;\n\n  constructor(props: Props) {\n    super(props);\n    this.cacheKey = `/repos/${props.repo.name}/pull_requests`;\n\n    let pullRequests: PullRequest[] = [];\n    const result = this.props.cache.get(this.cacheKey);\n\n    if (result['pull_requests']) {\n      for (let i = 0; i < result['pull_requests'].length; i++) {\n        pullRequests.push(new PullRequest(result['pull_requests'][i]));\n      }\n    }\n\n    this.state = {\n      pullRequests: pullRequests,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate(previousProps: Props) {\n    if (this.props.repo.openIssuesCount !== previousProps.repo.openIssuesCount) {\n      this.load();\n    }\n  }\n\n  async load() {\n    const pullRequests = await this.props.store.list(this.props.repo.name)\n\n    this.props.cache.set(this.cacheKey, { pull_requests: pullRequests });\n    this.setState({ pullRequests: pullRequests });\n  }\n\n  render(): Node {\n    let priority: string = 'none';\n    const count = this.state.pullRequests.length;\n\n    if (count > 0 ) {\n      priority = 'low';\n    }\n\n    if (count > 3 ) {\n      priority = 'medium';\n    }\n\n    if (count > 6 ) {\n      priority = 'high';\n    }\n\n    return (\n      <ExternalLink\n        href={`${this.props.repo.url}/pulls`}\n        className={`pull-request-count ${priority}`}\n        aria-label='pull-request-count'\n      >\n        <GitPullRequestIcon size={16} />\n        <div className='count'>{count}</div>\n      </ExternalLink>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport Repo from '../../models/repo';\nimport Release, { NullRelease } from '../../models/release';\nimport { ReleaseStoreInterface } from '../../stores/release_store';\nimport { CacheInterface } from '../../lib/cache';\n\nimport ExternalLink from '../lib/external_link';\nimport { GitCommitIcon } from '@primer/octicons-react';\n\nimport '../../styles/repo_list/release_state.css';\n\ntype Props = {|\n  repo: Repo,\n  releaseStore: ReleaseStoreInterface,\n  cache: CacheInterface,\n|};\n\ntype State = {|\n  release: Release,\n|}\n\nexport default class ReleaseState extends React.Component<Props, State> {\n  cacheKey: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.cacheKey = `/repos/${this.props.repo.name}/releases/latest`;\n\n    let release: Release = NullRelease;\n    const cachedRelease = this.props.cache.get(this.cacheKey);\n    if (cachedRelease['release']) {\n      release = new Release(cachedRelease['release']);\n    }\n\n    this.state = {\n      release: release,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  async load() {\n    const release = await this.props.releaseStore.latest(this.props.repo.name);\n\n    this.props.cache.set(this.cacheKey, { release: release });\n    this.setState({ release: release });\n  }\n\n  render(): Node {\n    let commitsClass = 'commits-behind';\n\n    if (this.state.release.commitsBehind > 0) {\n      commitsClass += ' behind';\n    }\n\n    return (\n      <ExternalLink\n        className='release-state'\n        href={`${this.props.repo.url}/releases`}\n        aria-label='release-state'\n      >\n        <div className='tag' aria-label='tag'>\n          {this.state.release.tag}\n        </div>\n        <div className={commitsClass} aria-label='commits-behind'>\n          {this.state.release.commitsBehind}\n          <GitCommitIcon size={16} />\n        </div>\n      </ExternalLink>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport Repo from '../../models/repo';\nimport { IssueStoreInterface } from '../../stores/issue_store';\nimport { PullRequestStoreInterface } from '../../stores/pull_request_store';\nimport { ReleaseStoreInterface } from '../../stores/release_store';\nimport { CacheInterface } from '../../lib/cache';\n\nimport IssueCount from './issue_count';\nimport PullRequestCount from './pull_request_count';\nimport ReleaseState from './release_state';\nimport ExternalLink from '../lib/external_link';\n\nimport '../../styles/repo_list/repo_item.css';\n\ntype Props = {|\n  repo: Repo,\n  issueStore: IssueStoreInterface,\n  pullRequestStore: PullRequestStoreInterface,\n  releaseStore: ReleaseStoreInterface,\n  cache: CacheInterface,\n|};\n\nexport default class RepoItem extends React.Component<Props> {\n  render(): Node {\n    const parts = this.props.repo.name.split('/');\n\n    const org = parts[0];\n    const repo = parts[1];\n\n    return (\n      <div className='repo-item'>\n        <div className='org'>{org}</div>\n        <ExternalLink href={this.props.repo.url} className='repo'>\n          {repo}\n        </ExternalLink>\n        <div className='issue-pull-request-count'>\n          <IssueCount\n            repo={this.props.repo}\n            store={this.props.issueStore}\n            cache={this.props.cache}\n          />\n          <PullRequestCount\n            repo={this.props.repo}\n            store={this.props.pullRequestStore}\n            cache={this.props.cache}\n          />\n        </div>\n        <ReleaseState\n          repo={this.props.repo}\n          releaseStore={this.props.releaseStore}\n          cache={this.props.cache}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport Repo from '../models/repo';\nimport { GitHubClientInterface, type GitHubClientResponse } from '../lib/github_client';\n\ntype Props = {|\n  client: GitHubClientInterface,\n|};\n\nexport default class RepoStore {\n  props: Props;\n\n  constructor(props: Props) {\n    this.props = props;\n  }\n\n  async list(org: string): Promise<Repo[]> {\n    let repos: Repo[] = [];\n    let path: string = `/orgs/${org}/repos`;\n\n    while (path) {\n      const response: GitHubClientResponse = await this.props.client.do({\n        method: 'GET',\n        path: path\n      });\n\n      for (const repo of response.data) {\n        repos.push(new Repo({\n          id: repo.id,\n          name: repo.full_name,\n          url: repo.html_url,\n          openIssuesCount: repo.open_issues_count,\n        }));\n      }\n\n      path = ((response.headers.link || \"\").match( /<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n    }\n\n    return repos;\n  }\n}\n\nexport interface RepoStoreInterface {\n  list(org: string): Promise<Repo[]>;\n};\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport Repo from '../../models/repo';\nimport RepoItem from './repo_item';\n\nimport { IssueStoreInterface } from '../../stores/issue_store';\nimport { RepoStoreInterface } from '../../stores/repo_store';\nimport { PullRequestStoreInterface } from '../../stores/pull_request_store';\nimport { ReleaseStoreInterface } from '../../stores/release_store';\nimport { TimerInterface } from '../../lib/timer';\nimport { CacheInterface } from '../../lib/cache';\n\nimport { SyncIcon } from '@primer/octicons-react';\n\nimport '../../styles/repo_list/index.css';\n\ntype Props = {|\n  repoStore: RepoStoreInterface,\n  issueStore: IssueStoreInterface,\n  pullRequestStore: PullRequestStoreInterface,\n  releaseStore: ReleaseStoreInterface,\n  timer: TimerInterface,\n  cache: CacheInterface,\n|};\n\ntype State = {|\n  loading: boolean,\n  repos: Repo[],\n|};\n\nexport default class RepoList extends React.Component<Props, State> {\n  handleReload: SyntheticEvent<HTMLButtonElement> => void;\n  interval: number;\n  cacheKey: string;\n\n  constructor(props: Props) {\n    super(props);\n    this.cacheKey = '/repos';\n\n    let repos: Repo[] = [];\n    const result = this.props.cache.get(this.cacheKey);\n\n    if (result['repos']) {\n      for (let i = 0; i < result['repos'].length; i++) {\n        repos.push(new Repo(result['repos'][i]));\n      }\n    }\n\n    this.state = {\n      loading: repos.length === 0,\n      repos: repos,\n    };\n\n    this.handleReload = this.handleReload.bind(this);\n  }\n\n  componentDidMount() {\n    this.load();\n    this.interval = this.props.timer.setInterval(this.load.bind(this), 900000);\n  }\n\n  componentWillUnmount() {\n    this.props.timer.clearInterval(this.interval);\n  }\n\n  handleReload(event: SyntheticEvent<HTMLButtonElement>): void {\n    this.load();\n  }\n\n  async load() {\n    const results = await Promise.all([\n      this.props.repoStore.list('paketo-buildpacks'),\n      this.props.repoStore.list('paketo-community'),\n    ]);\n\n    let repos: Repo[] = [];\n\n    for (const result of results) {\n      for (const repo of result) {\n        repos.push(repo);\n      }\n    }\n\n    repos.sort((a: Repo, b: Repo): number => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    this.props.cache.set(this.cacheKey, { repos: repos });\n    this.setState({ loading: false, repos: repos });\n  }\n\n  render(): Node {\n    let items = (<div className='loading'>...</div>);\n\n    if (!this.state.loading) {\n      items = this.state.repos.map((repo) => (\n        <RepoItem\n          key={repo.id}\n          repo={repo}\n          issueStore={this.props.issueStore}\n          pullRequestStore={this.props.pullRequestStore}\n          releaseStore={this.props.releaseStore}\n          cache={this.props.cache}\n        />\n      ));\n    }\n\n    return (\n      <div className='repo-list'>\n        <div className='title'>\n          <h2>Overview</h2>\n          <button onClick={this.handleReload}>\n            <SyncIcon size={16} />\n          </button>\n        </div>\n        <div className='list'>\n          {items}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport Issue from '../../models/issue';\nimport Repo from '../../models/repo';\n\nimport ExternalLink from '../lib/external_link';\nimport { CommentIcon } from '@primer/octicons-react';\n\nimport '../../styles/issue_list/issue_item.css';\n\ntype Props = {|\n  issue: Issue,\n  repo: Repo,\n|};\n\nexport default class IssueItem extends React.Component<Props> {\n  render(): Node {\n    const createdAtRelative = this.props.issue.createdAt.toRelative();\n    const createdAtDate = this.props.issue.createdAt.toLocaleString({ month: 'short', day: 'numeric', year: 'numeric' });\n\n    let commentCountClass = 'comment-count'\n    if (this.props.issue.commentCount === 0) {\n      commentCountClass += ' none';\n    }\n\n    return (\n      <div className='issue-item'>\n        <ExternalLink className='repo' href={this.props.repo.url} >\n          {this.props.repo.name}\n        </ExternalLink>\n        <div className='content'>\n          <div className='identifier'>\n            <img className='avatar' src={this.props.issue.user.avatarURL} alt='user-avatar' />\n            <div className='number'>#{this.props.issue.number}</div>\n            <ExternalLink className='title' href={this.props.issue.url} >\n              {this.props.issue.title}\n            </ExternalLink>\n          </div>\n          <div className={commentCountClass} aria-label='comment-count'>\n            <div className='count'>{this.props.issue.commentCount}</div>\n            <CommentIcon size={16} />\n          </div>\n        </div>\n        <div className='created-at'>opened {createdAtRelative} ({createdAtDate})</div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport { RepoStoreInterface } from '../../stores/repo_store';\nimport { IssueStoreInterface } from '../../stores/issue_store';\nimport { CacheInterface } from '../../lib/cache';\n\nimport Repo from '../../models/repo';\nimport Issue from '../../models/issue';\n\nimport IssueItem from './issue_item';\n\nimport '../../styles/issue_list/index.css';\n\ntype RepoIssue = {|\n  repo: Repo,\n  issue: Issue,\n|};\n\ntype Props = {|\n  repoStore: RepoStoreInterface,\n  issueStore: IssueStoreInterface,\n  cache: CacheInterface,\n|};\n\ntype State = {|\n  loading: boolean,\n  issues: RepoIssue[],\n|}\n\nexport default class IssueList extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const issues: RepoIssue[] = [];\n    const cachedRepos = this.props.cache.get('/repos');\n\n    if (cachedRepos['repos']) {\n      for (let repo of cachedRepos['repos']) {\n        const cachedIssues = this.props.cache.get(`/repos/${repo.name}/issues`);\n        if (cachedIssues['issues']) {\n          for (let issue of cachedIssues['issues']) {\n            issues.push({\n              repo: repo,\n              issue: new Issue(issue),\n            });\n          }\n        }\n      }\n    }\n\n    issues.sort((a: RepoIssue, b: RepoIssue): number => {\n      const createdAtA = a.issue.createdAt.toMillis();\n      const createdAtB = b.issue.createdAt.toMillis();\n\n      if (createdAtA < createdAtB) {\n        return -1;\n      }\n\n      if (createdAtA > createdAtB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    this.state = {\n      loading: issues.length === 0,\n      issues: issues,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  async load() {\n    const reposByOrg = await Promise.all([\n      this.props.repoStore.list('paketo-buildpacks'),\n      this.props.repoStore.list('paketo-community'),\n    ]);\n\n    const repos: Repo[] = [];\n    const promises: Promise<Issue[]>[] = [];\n\n    for (let orgRepos: Repo[] of reposByOrg) {\n      for (let repo: Repo of orgRepos) {\n        repos.push(repo);\n\n        const promise = this.props.issueStore.list(repo.name);\n        promises.push(promise);\n      }\n    }\n\n    const issuesByRepo = await Promise.all(promises);\n    const issues: RepoIssue[] = [];\n\n    for (let i = 0; i < issuesByRepo.length; i++) {\n      const repoIssues: Issue[] = issuesByRepo[i];\n      const repo: Repo = repos[i];\n\n      this.props.cache.set(`/repos/${repo.name}/issues`, { issues: repoIssues });\n\n      for (let issue: Issue of repoIssues) {\n        issues.push({\n          repo: repo,\n          issue: issue,\n        });\n      }\n    }\n\n    repos.sort((a: Repo, b: Repo): number => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    this.props.cache.set('/repos', { repos: repos });\n\n    issues.sort((a: RepoIssue, b: RepoIssue): number => {\n      const createdAtA = a.issue.createdAt.toMillis();\n      const createdAtB = b.issue.createdAt.toMillis();\n\n      if (createdAtA < createdAtB) {\n        return -1;\n      }\n\n      if (createdAtA > createdAtB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    this.setState({ loading: false, issues: issues });\n  }\n\n  render(): Node {\n    let items: Node = (<div className='loading'>...</div>);\n\n    if (!this.state.loading) {\n      items = this.state.issues.map(i => (\n        <IssueItem\n          key={i.issue.id}\n          issue={i.issue}\n          repo={i.repo}\n        />\n      ));\n    }\n\n    return (\n      <div className='issue-list'>\n        <div className='title'>\n          <h2>Open Issues</h2>\n          <div className='count'>({this.state.issues.length})</div>\n        </div>\n        <div className='list'>\n          {items}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport PullRequest from '../../models/pull_request';\nimport Repo from '../../models/repo';\n\nimport ExternalLink from '../lib/external_link';\n\nimport '../../styles/pull_request_list/pull_request_item.css';\n\ntype Props = {|\n  pullRequest: PullRequest,\n  repo: Repo,\n|};\n\nexport default class PullRequestItem extends React.Component<Props> {\n  render(): Node {\n    const createdAtRelative = this.props.pullRequest.createdAt.toRelative();\n    const createdAtDate = this.props.pullRequest.createdAt.toLocaleString({ month: 'short', day: 'numeric', year: 'numeric' });\n\n    return (\n      <div className='pull-request-item'>\n        <ExternalLink className='repo' href={this.props.repo.url} >\n          {this.props.repo.name}\n        </ExternalLink>\n        <div className='content'>\n          <div className='identifier'>\n            <img className='avatar' src={this.props.pullRequest.user.avatarURL} alt='user-avatar' />\n            <div className='number'>#{this.props.pullRequest.number}</div>\n            <ExternalLink className='title' href={this.props.pullRequest.url} >\n              {this.props.pullRequest.title}\n            </ExternalLink>\n          </div>\n        </div>\n        <div className='created-at'>opened {createdAtRelative} ({createdAtDate})</div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport { CacheInterface } from '../../lib/cache';\nimport { RepoStoreInterface } from '../../stores/repo_store';\nimport { PullRequestStoreInterface } from '../../stores/pull_request_store';\n\nimport Repo from '../../models/repo';\nimport PullRequest from '../../models/pull_request';\n\nimport PullRequestItem from './pull_request_item';\n\nimport '../../styles/pull_request_list/index.css';\n\ntype RepoPullRequest = {|\n  repo: Repo,\n  pullRequest: PullRequest,\n|};\n\ntype Props = {|\n  cache: CacheInterface,\n  repoStore: RepoStoreInterface,\n  pullRequestStore: PullRequestStoreInterface,\n|};\n\ntype State = {|\n  loading: boolean,\n  pullRequests: RepoPullRequest[],\n|};\n\nexport default class PullRequestList extends React.Component<Props,State> {\n  constructor(props: Props) {\n    super(props);\n\n    const pullRequests: RepoPullRequest[] = [];\n    const cachedRepos = this.props.cache.get('/repos');\n\n    if (cachedRepos['repos']) {\n      for (let repo of cachedRepos['repos']) {\n        const cachedPullRequests = this.props.cache.get(`/repos/${repo.name}/pull_requests`);\n        if (cachedPullRequests['pull_requests']) {\n          for (let pullRequest of cachedPullRequests['pull_requests']) {\n            pullRequests.push({\n              repo: repo,\n              pullRequest: new PullRequest(pullRequest),\n            });\n          }\n        }\n      }\n    }\n\n    pullRequests.sort((a: RepoPullRequest, b: RepoPullRequest): number => {\n      const createdAtA = a.pullRequest.createdAt.toMillis();\n      const createdAtB = b.pullRequest.createdAt.toMillis();\n\n      if (createdAtA < createdAtB) {\n        return -1;\n      }\n\n      if (createdAtA > createdAtB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    this.state = {\n      loading: pullRequests.length === 0,\n      pullRequests: pullRequests,\n    }\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  async load() {\n    const reposByOrg = await Promise.all([\n      this.props.repoStore.list('paketo-buildpacks'),\n      this.props.repoStore.list('paketo-community'),\n    ]);\n\n    const repos: Repo[] = [];\n    const promises: Promise<PullRequest[]>[] = [];\n\n    for (let orgRepos: Repo[] of reposByOrg) {\n      for (let repo: Repo of orgRepos) {\n        repos.push(repo);\n\n        const promise = this.props.pullRequestStore.list(repo.name);\n        promises.push(promise);\n      }\n    }\n\n    const pullRequestsByRepo = await Promise.all(promises);\n    const pullRequests: RepoPullRequest[] = [];\n\n    for (let i = 0; i < pullRequestsByRepo.length; i++) {\n      const repoPullRequests: PullRequest[] = pullRequestsByRepo[i];\n      const repo: Repo = repos[i];\n\n      this.props.cache.set(`/repos/${repo.name}/pull_requests`, { pull_requests: repoPullRequests });\n\n      for (let pullRequest: PullRequest of repoPullRequests) {\n        pullRequests.push({\n          repo: repo,\n          pullRequest: pullRequest,\n        });\n      }\n    }\n\n    repos.sort((a: Repo, b: Repo): number => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    this.props.cache.set('/repos', { repos: repos });\n\n    pullRequests.sort((a: RepoPullRequest, b: RepoPullRequest): number => {\n      const createdAtA = a.pullRequest.createdAt.toMillis();\n      const createdAtB = b.pullRequest.createdAt.toMillis();\n\n      if (createdAtA < createdAtB) {\n        return -1;\n      }\n\n      if (createdAtA > createdAtB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    this.setState({ loading: false, pullRequests: pullRequests });\n  }\n\n  render(): Node {\n    let items: Node = (<div className='loading'>...</div>);\n\n    if (!this.state.loading) {\n      items = this.state.pullRequests.map(pr => (\n        <PullRequestItem\n          key={pr.pullRequest.id}\n          pullRequest={pr.pullRequest}\n          repo={pr.repo}\n        />\n      ));\n    }\n\n    return (\n      <div className='pull-request-list'>\n        <div className='title'>\n          <h2> Open Pull Requests</h2>\n          <div className='count'>({this.state.pullRequests.length})</div>\n        </div>\n        <div className='list'>\n          {items}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './lib/private_route';\n\nimport '../styles/app.css';\n\nimport Header from './header';\nimport Login from './login';\nimport RepoList from './repo_list';\nimport IssueList from './issue_list';\nimport PullRequestList from './pull_request_list';\n\nimport { RepoStoreInterface } from '../stores/repo_store';\nimport { IssueStoreInterface } from '../stores/issue_store';\nimport { PullRequestStoreInterface } from '../stores/pull_request_store';\nimport { ReleaseStoreInterface } from '../stores/release_store';\nimport { TimerInterface } from '../lib/timer';\nimport { CacheInterface } from '../lib/cache';\nimport { StorageInterface } from '../lib/storage';\n\ntype Props = {|\n  repoStore: RepoStoreInterface,\n  issueStore: IssueStoreInterface,\n  pullRequestStore: PullRequestStoreInterface,\n  releaseStore: ReleaseStoreInterface,\n  timer: TimerInterface,\n  cache: CacheInterface,\n  storage: StorageInterface,\n|};\n\ntype State = {|\n  authenticated: boolean,\n|};\n\nclass App extends React.Component<Props, State> {\n  assignToken: string => void;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = { authenticated: !!this.props.storage.getItem('token') };\n\n    this.assignToken = this.assignToken.bind(this);\n  }\n\n  assignToken(token: string): void {\n    this.props.storage.setItem('token', token);\n    this.setState({ authenticated: !!this.props.storage.getItem('token') });\n  }\n\n  render(): Node {\n    let root = '';\n    if (process.env.PUBLIC_URL) {\n      root = process.env.PUBLIC_URL;\n    }\n\n    return (\n      <div className=\"app\">\n        <Header />\n        <section className=\"body\">\n          <Switch>\n\n            <Route path={`${root}/login`} render={({ history, location }) =>\n              <Login\n                assignToken={this.assignToken}\n                history={history}\n                location={location}\n              />}\n            />\n\n            <PrivateRoute path={`${root}/issues`} authenticated={this.state.authenticated}>\n              <IssueList\n                cache={this.props.cache}\n                repoStore={this.props.repoStore}\n                issueStore={this.props.issueStore}\n              />\n            </PrivateRoute>\n\n            <PrivateRoute path={`${root}/pull-requests`} authenticated={this.state.authenticated}>\n              <PullRequestList\n                cache={this.props.cache}\n                repoStore={this.props.repoStore}\n                pullRequestStore={this.props.pullRequestStore}\n              />\n            </PrivateRoute>\n\n            <PrivateRoute path={`${root}/`} authenticated={this.state.authenticated}>\n              <RepoList\n                repoStore={this.props.repoStore}\n                issueStore={this.props.issueStore}\n                pullRequestStore={this.props.pullRequestStore}\n                releaseStore={this.props.releaseStore}\n                timer={this.props.timer}\n                cache={this.props.cache}\n              />\n            </PrivateRoute>\n\n          </Switch>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components';\n\nimport GitHubClient from './lib/github_client';\nimport RepoStore from './stores/repo_store';\nimport IssueStore from './stores/issue_store';\nimport PullRequestStore from './stores/pull_request_store';\nimport ReleaseStore from './stores/release_store';\nimport Cache from './lib/cache';\n\nconst storage = window.localStorage;\nconst timer = window;\nconst cache = new Cache({ storage: storage });\n\nconst gitHubClient = new GitHubClient({ storage: storage });\nconst repoStore = new RepoStore({ client: gitHubClient });\nconst issueStore = new IssueStore({ client: gitHubClient });\nconst pullRequestStore = new PullRequestStore({ client: gitHubClient });\nconst releaseStore = new ReleaseStore({ client: gitHubClient });\n\nReactDOM.render(\n  <BrowserRouter>\n    <App\n      repoStore={repoStore}\n      issueStore={issueStore}\n      pullRequestStore={pullRequestStore}\n      releaseStore={releaseStore}\n      timer={timer}\n      cache={cache}\n      storage={storage}\n    />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}